#!/bin/bash

cd "$(dirname "$0")"

if [[ $# -eq 0 ]]; then
    destroy=0
elif [[ $# -eq 1 ]] && [ "$1" = "apply" ]; then
    destroy=0
elif [[ $# -eq 1 ]] && [ "$1" = "destroy" ]; then
    destroy=1
else
    >&2 echo "Usage: $0 [apply|destroy]"
    exit 1
fi

##########
# Get ip #
##########
personal_ip="$(curl -sL4 -o- icanhazip.com)"

echo "$personal_ip" | grep -Pq '^((25[0-5]|(2[0-4]|1\d|[1-9]|)\d)\.?\b){4}$'
if [[ $? -eq 0 ]]; then
    echo "Got ip: $personal_ip"
else
    >&2 echo "Failed to obtain public ipv4 address"
    exit 1
fi

###################
# Get ssh pub key #
###################
key_file="$(find "$HOME/.ssh/" | grep -m1 -E "*.pub")"

if [[ -z "$key_file" ]]; then
    >&2 echo "Failed to find ssh pubkey file in ~/.ssh/"
    exit 1
else
    echo "Found ssh pub key: $key_file"
fi

ssh_key="$(cat "$key_file")"

##################
# Read .env file #
##################
if [ -f "../.env" ]; then
    set -a
    source "../.env"
    set +a
fi

###########################
# Ensure env vars are set #
###########################
if [[ -z "$DOCDB_PASS" ]]; then
    >&2 echo "Missing required env: DOCDB_PASS"
    exit 1
fi

printf "Press return to contiune..."
read

##########################
# Run terraform commands #
##########################
cd ../terraform

export TF_VAR_document_db_password="$DOCDB_PASS"
export TF_VAR_my_ip="${personal_ip}/32"
export TF_VAR_ssh_key_public="$ssh_key"

if [[ "$destroy" -eq 1 ]]; then
    terraform plan -destroy -out /tmp/terraform-plan

    printf "Press return to destroy..."
    read
else
    terraform plan -out /tmp/terraform-plan

    printf "Press return to apply..."
    read
fi

terraform apply -auto-approve /tmp/terraform-plan
